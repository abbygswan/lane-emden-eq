# -*- coding: utf-8 -*-
"""Lane-Emden EQ

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iUEyRFd03TPoHWT3FBIBUOE9SE3FfCio
"""

import math
from math import *
import matplotlib.pyplot as plt
from random import randint


def dphidxi(xi,theta,n):
  return -(xi**2)*(theta**n)

def dthetadxi(phi,xi):
  return phi/(xi**2)




def graph(n):

  xi=0.1
  phi=0
  theta=1
  n=n
  delta_xi = 0.0001

  xi_list=[ xi ]
  theta_list=[ theta ]
  n1_ana=[ 1 ]

  while (theta>0):
    phi=phi+dphidxi(xi,theta,n)*delta_xi
    theta=theta+dthetadxi(phi,xi)*delta_xi
    xi=xi+delta_xi
    xi_list.append(xi)
    theta_list.append(theta**n)
    n1_ana.append(math.sin(xi)/xi)

  rgb = (randint(0,100)/100,randint(0,100)/100,randint(0,100)/100)
  if n==0:
    print("n={} Lambda={} xi_n={} phi_n={} central condensation={}".format(0,"division by zero",xi,abs(phi),(xi**3/(3*abs(phi)))))
  else:
    print("n={} Lambda={} xi_n={} phi_n={} central condensation={}".format(n,1+1/n,xi,abs(phi),(xi**3/(3*abs(phi)))))


  plt.plot(xi_list,theta_list, linestyle= "solid", color = rgb, label = "N="+str(n))
  if n==1:
     plt.plot(xi_list,n1_ana, linestyle= "dashed", color = "black", label = "N=1(ana)")



for i in range(0, 7):
  graph(i/2)
plt.xlabel('xi')
plt.ylabel('theta^n')
plt.legend()